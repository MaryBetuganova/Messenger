services:

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: messenger
      POSTGRES_USER: messenger
      POSTGRES_PASSWORD: messenger_pass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U messenger -d messenger" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: cassandra:4.1
    restart: unless-stopped
    environment:
      CASSANDRA_CLUSTER_NAME: "messenger_cluster"
      CASSANDRA_START_RPC: "true"
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e \"DESCRIBE keyspaces;\"" ]
      interval: 15s
      timeout: 10s
      retries: 6

  cassandra-init:
    image: cassandra:4.1
    depends_on:
      cassandra:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./cassandra/schema.cql:/schema.cql:ro
    entrypoint:
      - sh
      - -c
      - |
        cqlsh ${CASSANDRA_HOST} ${CASSANDRA_PORT} \
          -u ${CASSANDRA_USER} -p ${CASSANDRA_PASSWORD} \
          -e "CREATE KEYSPACE IF NOT EXISTS ${CASSANDRA_DB}
              WITH REPLICATION = {'class':'SimpleStrategy','replication_factor':1};" && \
        cqlsh ${CASSANDRA_HOST} ${CASSANDRA_PORT} \
          -u ${CASSANDRA_USER} -p ${CASSANDRA_PASSWORD} \
          -k ${CASSANDRA_DB} \
          -f /schema.cql
    restart: "no"

  seeder:
    build:
      context: ./seeder
      dockerfile: Dockerfile.seeder
    depends_on:
      postgres:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      cassandra-init:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}

      CASSANDRA_HOST: ${CASSANDRA_HOST}
      CASSANDRA_USER: ${CASSANDRA_USER}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
      CASSANDRA_DB: ${CASSANDRA_DB}
      CASSANDRA_PORT: ${CASSANDRA_PORT}

      SEED_COUNT: ${SEED_COUNT}
    volumes:
      - ./seeder:/seederdir
    entrypoint: /app/entry.sh